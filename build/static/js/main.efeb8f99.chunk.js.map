{"version":3,"sources":["utils.js","form/fillForm.js","form/formDetails.js","App.js","serviceWorker.js","index.js"],"names":["LocalStorage","set","key","val","localStorage","setItem","JSON","stringify","delete","getItem","removeItem","console","log","get","parse","fillForm","params","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","state","setState","onSubmit","handleOtherPrototype","setTimeout","props","history","push","pathname","query","setStay","_this$state$state$roo","roomType","checkInTime","leaveTime","a","moment","format","b","date","Math","floor","abs","setName","otherPrototype","Array","isArray","split","state_order_time","order","time","state_roomType_checkInTime","state_roomType_leaveTime","forceUpdate","objName","data","assign","defineProperty","data2","hotel","name","address","add","stay","roomNum","orderInfo","person","tel","inTime","inDes","encourage","num","code","_this2","_react_16_6_3_react_default","createElement","es","renderHeader","clear","value","onChange","placeholder","mode","title","Date","Item","arrow","type","size","inline","onClick","Component","createForm","withRouter","List","Brief","FormDetails","handleClick","queryState","location","className","multipleLine","extra","style","whiteSpace","width","align","color","map","item","index","App","HashRouter","Switch","Route","path","component","FillForm","Redirect","to","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efeb8f99.chunk.js","sourcesContent":["const LocalStorage = {\r\n  set(key, val) {\r\n    typeof val === 'string'\r\n      ? localStorage.setItem(key, val)\r\n      : localStorage.setItem(key, JSON.stringify(val))\r\n  },\r\n  delete(key) {\r\n    localStorage.getItem(key)\r\n      ? localStorage.removeItem(key)\r\n      : console.log('没有对应的存贮')\r\n  },\r\n  get(key) {\r\n    return localStorage.getItem(key)\r\n      ? typeof JSON.parse(localStorage.getItem(key)) !== 'string'\r\n        ? JSON.parse(localStorage.getItem(key))\r\n        : localStorage.getItem(key)\r\n      : console.log('没有对应的存贮')\r\n  }\r\n}\r\n\r\nexport default LocalStorage\r\n","import React, { Component } from 'react'\r\nimport { List, InputItem, Button, DatePicker } from 'antd-mobile'\r\nimport { createForm } from 'rc-form'\r\nimport { withRouter } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport LocalStorage from '../utils'\r\n\r\nclass fillForm extends Component {\r\n  constructor(params) {\r\n    super()\r\n    this.state = {\r\n      state: {\r\n        hotel: {\r\n          name: '雅文主题酒店',\r\n          address: '汝阳县杜鹃大道与凤山南路交汇处南200米'\r\n        },\r\n        roomType: {\r\n          name: '海景时尚蜗居房',\r\n          checkInTime: moment().format('YYYY-MM-DD'),\r\n          leaveTime: moment()\r\n            .add('days', 1)\r\n            .format('YYYY-MM-DD'),\r\n          stay: '1',\r\n          roomNum: '1',\r\n          otherPrototype: ['大床', '', '含双早', '', '有wifi和宽带']\r\n        },\r\n        orderInfo: {\r\n          person: '',\r\n          tel: '',\r\n          inTime: '19:00',\r\n          inDes: '14:00'\r\n        },\r\n        encourage: {\r\n          num: '55'\r\n        },\r\n        order: {\r\n          code: '927537252',\r\n          time: '2018-10-23 17:48'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let state =\r\n      (LocalStorage.get('state') && LocalStorage.get('state').state) ||\r\n      this.state.state\r\n    // console.log(state)\r\n    this.setState({\r\n      state\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.handleOtherPrototype()\r\n    setTimeout(() => {\r\n      this.props.history.push({\r\n        pathname: `/FormDetails`,\r\n        query: {\r\n          state: this.state\r\n        }\r\n      })\r\n      LocalStorage.set('state', this.state)\r\n    }, 300)\r\n  }\r\n\r\n  setStay = () => {\r\n    // 算一下逗留几晚\r\n    let { checkInTime, leaveTime } = this.state.state.roomType\r\n    let a = moment(checkInTime).format('x')\r\n    let b = moment(leaveTime).format('x')\r\n    let date = Math.floor(Math.abs(a - b) / 86400000)\r\n    this.setName('roomType', 'stay', date)\r\n  }\r\n\r\n  handleOtherPrototype = () => {\r\n    let { otherPrototype } = this.state.state.roomType\r\n    let state = this.state.state\r\n    if (Array.isArray(otherPrototype)) {\r\n      this.setName('roomType', 'otherPrototype', otherPrototype)\r\n    } else {\r\n      otherPrototype = otherPrototype.split(',')\r\n      this.setName('roomType', 'otherPrototype', otherPrototype)\r\n    }\r\n    let state_order_time = moment(state.order.time).format(\r\n      'YYYY-MM-DD HH:mm:ss'\r\n    )\r\n    this.setName('order', 'time', state_order_time)\r\n    let state_roomType_checkInTime = moment(state.roomType.checkInTime).format(\r\n      'YYYY-MM-DD'\r\n    )\r\n    this.setName('roomType', 'checkInTime', state_roomType_checkInTime)\r\n    let state_roomType_leaveTime = moment(state.roomType.leaveTime).format(\r\n      'YYYY-MM-DD'\r\n    )\r\n    this.setName('roomType', 'leaveTime', state_roomType_leaveTime)\r\n    this.forceUpdate()\r\n    setTimeout(() => console.log(this.state.state), 0)\r\n  }\r\n  setName = (objName, key, val) => {\r\n    // 这个对象的合并\r\n    let data = Object.assign({}, this.state.state[objName], { [key]: val })\r\n    let data2 = Object.assign({}, this.state.state, { [objName]: data })\r\n    // console.log(data)\r\n    // console.log(data2)\r\n    this.setState({\r\n      state: data2\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <List renderHeader={() => '酒店信息'}>\r\n          <InputItem\r\n            clear\r\n            value={this.state.state.hotel.name}\r\n            onChange={date => this.setName('hotel', 'name', date)}\r\n            placeholder=\"请填写酒店名称\"\r\n          >\r\n            酒店名称\r\n          </InputItem>\r\n          <InputItem\r\n            clear\r\n            value={this.state.state.hotel.address}\r\n            onChange={date => this.setName('hotel', 'address', date)}\r\n            placeholder=\"请填写酒店地址\"\r\n          >\r\n            酒店地址\r\n          </InputItem>\r\n        </List>\r\n\r\n        <List renderHeader={() => '房间信息'}>\r\n          <InputItem\r\n            clear\r\n            value={this.state.state.roomType.name}\r\n            onChange={date => this.setName('roomType', 'name', date)}\r\n            placeholder=\"请填写房间名称\"\r\n          >\r\n            房间名称\r\n          </InputItem>\r\n          <DatePicker\r\n            mode=\"date\"\r\n            title=\"请选择入住日期\"\r\n            value={new Date(this.state.state.roomType.checkInTime)}\r\n            onChange={date => this.setName('roomType', 'checkInTime', date)}\r\n          >\r\n            <List.Item arrow=\"horizontal\">入住日期</List.Item>\r\n          </DatePicker>\r\n          <DatePicker\r\n            mode=\"date\"\r\n            title=\"请选择离开日期\"\r\n            value={new Date(this.state.state.roomType.leaveTime)}\r\n            onChange={date => {\r\n              this.setName('roomType', 'leaveTime', date)\r\n              setTimeout(() => {\r\n                this.setStay()\r\n              }, 0)\r\n            }}\r\n          >\r\n            <List.Item arrow=\"horizontal\">离开日期</List.Item>\r\n          </DatePicker>\r\n          <InputItem\r\n            type=\"number\"\r\n            value={this.state.state.roomType.stay}\r\n            onChange={date => this.setName('roomType', 'stay', date)}\r\n            placeholder=\"请输入逗留几晚\"\r\n          >\r\n            逗留几晚\r\n          </InputItem>\r\n          <InputItem\r\n            type=\"number\"\r\n            value={this.state.state.roomType.roomNum}\r\n            onChange={date => this.setName('roomType', 'roomNum', date)}\r\n            placeholder=\"请输入几间房\"\r\n          >\r\n            几间房\r\n          </InputItem>\r\n          <InputItem\r\n            clear\r\n            value={this.state.state.roomType.otherPrototype}\r\n            onChange={date => {\r\n              this.setName('roomType', 'otherPrototype', date)\r\n            }}\r\n            placeholder=\"请填写房间属性\"\r\n          >\r\n            房间属性\r\n          </InputItem>\r\n        </List>\r\n\r\n        <List renderHeader={() => '预定信息'}>\r\n          <InputItem\r\n            clear\r\n            value={this.state.state.orderInfo.person}\r\n            onChange={date => this.setName('orderInfo', 'person', date)}\r\n            placeholder=\"请填写订单人\"\r\n          >\r\n            订单人\r\n          </InputItem>\r\n\r\n          <InputItem\r\n            type=\"phone\"\r\n            value={this.state.state.orderInfo.tel}\r\n            onChange={date => this.setName('orderInfo', 'tel', date)}\r\n            placeholder=\"请填写手机号码\"\r\n          >\r\n            手机号码\r\n          </InputItem>\r\n\r\n          <InputItem\r\n            value={this.state.state.orderInfo.inTime}\r\n            onChange={date => this.setName('orderInfo', 'inTime', date)}\r\n            placeholder=\"请填写到店时间\"\r\n          >\r\n            到店时间\r\n          </InputItem>\r\n\r\n          <InputItem\r\n            value={this.state.state.orderInfo.inDes}\r\n            onChange={date => this.setName('orderInfo', 'inDes', date)}\r\n            placeholder=\"请填写商家入住\"\r\n          >\r\n            商家时间\r\n          </InputItem>\r\n\r\n          <InputItem\r\n            type=\"number\"\r\n            value={this.state.state.encourage.num}\r\n            onChange={date => this.setName('encourage', 'num', date)}\r\n            placeholder=\"请填写本单奖励\"\r\n          >\r\n            本单奖励\r\n          </InputItem>\r\n        </List>\r\n\r\n        <List renderHeader={() => '订单信息'}>\r\n          <InputItem\r\n            clear\r\n            value={this.state.state.order.code}\r\n            onChange={date => this.setName('order', 'code', date)}\r\n            placeholder=\"请填写订单号\"\r\n          >\r\n            订单号\r\n          </InputItem>\r\n\r\n          <DatePicker\r\n            value={new Date(this.state.state.order.time)}\r\n            onChange={date => this.setName('order', 'time', date)}\r\n          >\r\n            <List.Item arrow=\"horizontal\">下单时间</List.Item>\r\n          </DatePicker>\r\n        </List>\r\n\r\n        <List.Item>\r\n          <Button type=\"primary\" size=\"small\" inline onClick={this.onSubmit}>\r\n            提交\r\n          </Button>\r\n        </List.Item>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfillForm = createForm()(fillForm)\r\nexport default withRouter(fillForm)\r\n","import React, { Component } from 'react'\r\nimport { List } from 'antd-mobile'\r\nimport moment from 'moment'\r\n\r\nconst Item = List.Item\r\nconst Brief = Item.Brief\r\nclass FormDetails extends Component {\r\n  constructor(params) {\r\n    super()\r\n    this.state = {\r\n      state: {\r\n        hotel: {\r\n          name: '雅文主题酒店',\r\n          address: '汝阳县杜鹃大道与凤山南路交汇处南200米'\r\n        },\r\n        roomType: {\r\n          name: '海景时尚蜗居房',\r\n          checkInTime: '2018-10-23',\r\n          leaveTime: '2018-10-24',\r\n          stay: '1',\r\n          roomNum: '1',\r\n          otherPrototype: ['大床', '', '含双早', '', '有wifi和宽带']\r\n        },\r\n        orderInfo: {\r\n          person: '',\r\n          tel: '',\r\n          inTime: '19:00',\r\n          inDes: '14:00'\r\n        },\r\n        encourage: {\r\n          num: '55'\r\n        },\r\n        order: {\r\n          code: '927537252',\r\n          time: '2018-10-23 17:48'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let queryState =\r\n      this.props.location.query && this.props.location.query.state\r\n    console.log(queryState)\r\n\r\n    if (queryState) {\r\n      this.setState({\r\n        state: queryState.state\r\n      })\r\n    } else {\r\n      this.props.history.push({\r\n        pathname: `/FillForm`\r\n      })\r\n    }\r\n  }\r\n  handleClick = () => {\r\n    this.props.history.push({\r\n      pathname: `/FillForm`\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"formDetails\">\r\n        <div className=\"header_title\">\r\n          <div className=\"left_arrow\" onClick={this.handleClick}>\r\n            <i className=\"iconfont icon-fanhui\" />\r\n          </div>\r\n          <div className=\"center_title\">待评价</div>\r\n        </div>\r\n        <Item multipleLine extra=\"查看商家\" arrow=\"horizontal\">\r\n          {this.state.state.hotel.name}\r\n          <Brief style={{ whiteSpace: 'normal', width: 'calc(100% - 65px)' }}>\r\n            {this.state.state.hotel.address}\r\n            {/* <div className=\"arrow\">\r\n              <i className=\"iconfont icon-jiantou\" />\r\n            </div> */}\r\n          </Brief>\r\n        </Item>\r\n        <Item extra=\"查看房型\" align=\"top\" multipleLine arrow=\"horizontal\">\r\n          {this.state.state.roomType.name}\r\n          <Brief style={{ color: '#333', whiteSpace: 'normal' }}>\r\n            入住:\r\n            <span>\r\n              {moment(this.state.state.roomType.checkInTime).format('MM-DD')}\r\n            </span>\r\n            （今天） 离店：\r\n            <span>\r\n              {moment(this.state.state.roomType.leaveTime).format('MM-DD')}\r\n            </span>\r\n            （明天） 共<span>{this.state.state.roomType.stay}</span>晚\r\n            <span>{this.state.state.roomType.roomNum}</span>间\r\n          </Brief>\r\n          <Brief>\r\n            {Array.isArray(this.state.state.roomType.otherPrototype)\r\n              ? this.state.state.roomType.otherPrototype.map((item, index) => {\r\n                  return index % 2 !== 0 ? (\r\n                    <span className=\"verticalLine\" key={index}>\r\n                      |\r\n                    </span>\r\n                  ) : (\r\n                    <span key={index}>{item}</span>\r\n                  )\r\n                })\r\n              : this.state.state.roomType.otherPrototype\r\n                  .split(',')\r\n                  .map((item, index) => {\r\n                    return index % 2 !== 0 ? (\r\n                      <span className=\"verticalLine\" key={index}>\r\n                        |\r\n                      </span>\r\n                    ) : (\r\n                      <span key={index}>{item}</span>\r\n                    )\r\n                  })}\r\n          </Brief>\r\n        </Item>\r\n        <div className=\"desBox\">\r\n          <div className=\"iconBox\">\r\n            <div className=\"left\">\r\n              <div className=\"iconText\">\r\n                <i className=\"iconfont icon-dingwei\" />\r\n                查看路线\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <div className=\"iconText\">\r\n                <i className=\"iconfont icon-002dianhua\" />\r\n                联系商家\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box\">\r\n          <div className=\"title\">预定信息</div>\r\n          <ul className=\"list\">\r\n            <li className=\"item\">\r\n              <div className=\"item-left\">入住人</div>\r\n              <div className=\"item-right\">\r\n                {this.state.state.orderInfo.person}\r\n              </div>\r\n            </li>\r\n            <li className=\"item\">\r\n              <div className=\"item-left\">联系手机</div>\r\n              <div className=\"item-right\">{this.state.state.orderInfo.tel}</div>\r\n            </li>\r\n            <li className=\"item\">\r\n              <div className=\"item-left\">预计到店</div>\r\n              <div className=\"item-right\">\r\n                <span>\r\n                  {moment(this.state.state.roomType.checkInTime).format(\r\n                    'MM月DD日'\r\n                  )}\r\n                </span>\r\n                <span>{this.state.state.orderInfo.inTime}</span>\r\n                之前（不影响酒店留房）\r\n              </div>\r\n            </li>\r\n            <li className=\"item\">\r\n              <div className=\"item-left\">入住说明</div>\r\n              <div className=\"item-right\">\r\n                商家通常\r\n                <span>{this.state.state.orderInfo.inDes}</span>\r\n                开始办理入住，如需提早办理请联系商家\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"box no-border\">\r\n          <div className=\"title\">本单可享</div>\r\n          <ul className=\"list\">\r\n            <li className=\"item\">\r\n              <div className=\"item-left\">美团瓜籽</div>\r\n              <div className=\"item-right\">\r\n                消费后预计获取\r\n                <span>{this.state.state.encourage.num}</span>\r\n                美团瓜籽（离店次日到账）\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"box border-top\">\r\n          <div className=\"title\">订单信息</div>\r\n          <ul className=\"list\">\r\n            <li className=\"item\">\r\n              <div className=\"item-left\">订单号</div>\r\n              <div className=\"item-right\">{this.state.state.order.code}</div>\r\n            </li>\r\n            <li className=\"item\">\r\n              <div className=\"item-left\">下单时间</div>\r\n              <div className=\"item-right\">\r\n                {moment(this.state.state.order.time).format('YYYY-MM-DD HH:mm')}\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormDetails\r\n","import React, { Component } from 'react'\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport 'antd-mobile/dist/antd-mobile.css'\nimport './mixin.scss'\n// import { Button } from 'antd-mobile'\nimport FillForm from './form/fillForm'\nimport FormDetails from './form/formDetails'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Switch>\n            <Route path=\"/FillForm\" component={FillForm} />\n            <Route path=\"/FormDetails\" component={FormDetails} />\n            <Redirect to=\"/FillForm\" />\n          </Switch>\n        </HashRouter>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}